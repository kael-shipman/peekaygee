#!/bin/bash

set -e

D="$(dirname "$(readlink -f "$0")")"
for libdir in "$D" "$PEEKAYGEE_LIBDIR" /usr/lib/peekaygee; do
    if [ -e "$libdir/libpeekaygee-srvworker.sh" ]; then
        . "$libdir/libpeekaygee-srvworker.sh"
        lib_loaded=true
        break
    fi
done
if [ "$lib_loaded" != "true" ]; then
    >&2 echo
    >&2 echo "E: Couldn't find peekaygee libraries! Are you sure you've installed"
    >&2 echo "   peekaygee correctly?"
    >&2 echo
    exit 1
fi

export PKG_VERSION="::VERSION::"

function echo_usage() {
    echo
    echo "SYNOPSIS"
    echo "      $(basename "$0") [command] [command-options]"
    echo
    echo "DESCRIPTION"
    echo "      \`peekaygee-srvworker-apt\` is a \`peekaygee\` server-side worker program that handles archive"
    echo "      maintenance tasks for apt package archives."
    echo
    echo "COMMANDS"
    echo "      add [archive-path] [debfile] [json-options-str]"
    echo "          Adds package file [debfile] to the peekaygee archive at [archive-path], using [json-options-str]"
    echo "          to determine certain characteristics"
    echo
    echo "      remove [archive-path] [pkg-spec] [json-options-str]"
    echo "          removes all packages matching [pkg-spec] from the peekaygee archive at [archive-path], using"
    echo "          [json-options-str] to determine certain characteristics"
    echo
    echo "GLOBAL OPTIONS"
    echo "      -h|--help"
    echo "          Show this help text. Note: you can also pass --help|-h to any subcommand"
    echo "          to see more information about each."
    echo
    echo "      --version"
    echo "          Display version information"
    echo
    echo
    echo
}

# Initial loop to gather global options and main command
while [ "$#" -gt 0 ]; do
    case "$1" in
        add|remove)
            COMMAND="$1"
            shift
            break
        ;;

        -h|--help)
            echo_usage
            exit
        ;;

        --version)
            echo
            echo "$(basename "$0") version $PKG_VERSION"
            echo
            echo "See readme and license information, file bug reports, and view source code at"
            echo "https://github.com/kael-shipman/peekaygee"
            echo
            exit
        ;;

        *)
            >&2 echo_usage
            >&2 echo
            >&2 echo "E: You've passed an invalid command or option: $1"
            >&2 echo
            exit 1
        ;;
    esac
done


# Validate dependencies
if ! command -v reprepro &>/dev/null; then
    >&2 echo
    >&2 echo "E: Required dependency reprepro appears to be missing. Can't continue."
    >&2 echo
    exit 19
fi


# Validate empties
if [ -z ${COMMAND+x} ]; then
    >&2 echo_usage
    >&2 echo
    >&2 echo "E: You haven't passed a command!"
    >&2 echo
    exit 3
fi



# Execute subcommand logic

ARCHIVE_TYPE=apt

if [ "$COMMAND" == "add" ]; then
    # Defines ARCHIVE, DEBFILE, OPTIONS, and TARG_ARCHIVE, and throws appropriate errors
    peekaygee_prep_srvworker_add

    if [ ! -e "$TARG_ARCHIVE/conf/distributions" ]; then
        >&2 echo
        >&2 echo "E: It looks like you haven't yet configured your reprepro archive at '$TARG_ARCHIVE'."
        >&2 echo "   You must configure this archive by creating a \`distributions\` file at"
        >&2 echo "   '$TARG_ARCHIVE/conf/distributions'"
        >&2 echo
        exit 21
    fi

    >&2 echo "E: Not yet implemented"
    exit 507

elif [ "$COMMAND" == "remove" ]; then
    >&2 echo "E: Not yet implemented"
    exit 507
fi


